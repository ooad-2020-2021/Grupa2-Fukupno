// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TuT.ba.Data;

namespace TuT.ba.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TuT.ba.Models.BankovniRacun", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<long>("BrojRacuna")
                        .HasColumnType("bigint");

                    b.Property<int>("CSC")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumIsteka")
                        .HasColumnType("datetime");

                    b.Property<double>("StanjeRacuna")
                        .HasColumnType("double");

                    b.HasKey("ID");

                    b.ToTable("BankovniRacun");
                });

            modelBuilder.Entity("TuT.ba.Models.Instrukcija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("Cijena")
                        .HasColumnType("double");

                    b.Property<DateTime>("DatumOdrzavanja")
                        .HasColumnType("datetime");

                    b.Property<int>("NacinOdrzavanja")
                        .HasColumnType("int");

                    b.Property<double?>("Popust")
                        .IsRequired()
                        .HasColumnType("double");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.Property<int>("Trajanje")
                        .HasColumnType("int");

                    b.Property<int>("TutorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StudentID");

                    b.HasIndex("TutorID");

                    b.ToTable("Instrukcija");
                });

            modelBuilder.Entity("TuT.ba.Models.Korisnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("BankovniRacunID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sifra")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.HasIndex("BankovniRacunID");

                    b.ToTable("Korisnik");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Korisnik");
                });

            modelBuilder.Entity("TuT.ba.Models.Materijal", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("predmetID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("predmetID");

                    b.ToTable("Materijal");
                });

            modelBuilder.Entity("TuT.ba.Models.Predmet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Predmet");
                });

            modelBuilder.Entity("TuT.ba.Models.Student", b =>
                {
                    b.HasBaseType("TuT.ba.Models.Korisnik");

                    b.HasDiscriminator().HasValue("Student");
                });

            modelBuilder.Entity("TuT.ba.Models.Tutor", b =>
                {
                    b.HasBaseType("TuT.ba.Models.Korisnik");

                    b.Property<int>("DozvoljeniNacinRealizacije")
                        .HasColumnType("int");

                    b.Property<double>("ProsjecnaOcjena")
                        .HasColumnType("double");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasDiscriminator().HasValue("Tutor");
                });

            modelBuilder.Entity("TuT.ba.Models.Instrukcija", b =>
                {
                    b.HasOne("TuT.ba.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TuT.ba.Models.Tutor", "Tutor")
                        .WithMany()
                        .HasForeignKey("TutorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TuT.ba.Models.Korisnik", b =>
                {
                    b.HasOne("TuT.ba.Models.BankovniRacun", "BankovniRacun")
                        .WithMany()
                        .HasForeignKey("BankovniRacunID");
                });

            modelBuilder.Entity("TuT.ba.Models.Materijal", b =>
                {
                    b.HasOne("TuT.ba.Models.Predmet", "predmet")
                        .WithMany()
                        .HasForeignKey("predmetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
